namespace "wordfrequency"

directive @length(min: u32?, max: u32?)

type Person {
  firstName: string @length(min: 5)
}

shape component {
  group inputs {
    fields
  }
  group outputs {
    fields
  }
}

component WordFrequency {
  input {
    words: stream string
  }
  outputs {
    value: stream WordCount
  }
}

shape aggregate {
  group mutation {
    funcs
  }
  group query {
    funcs
  }
}

aggregate BankAccount {
  mutation {
    withdraw(amount: u64)
    deposit(amount: u64)
  }
  query {
    balance(): u64
  }
}

/////////////////////////////////////////////////////////

func hello(firstName string, lastName string): string

component Router {
  input {
    messages: stream CloudEvent
  }
  output {
    widgets: stream WidgetEvent
    gadgets: stream GadgetEvent
  }
}

type WordCount {
  word: string
  count: u64
}

interface WordFrequency {
  frequency[words: stream string]: stream WordCount
}

func frequency[words: stream string]: stream WordCount

field word: string

[group] Name {
  funcs
  fields
  [group] Nested {

  }
}
